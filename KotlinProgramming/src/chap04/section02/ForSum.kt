package chap04.section02
/*
<for문>
for문은 변수를 선언하고 조건식에 따라 변수 값을 반복해서 증감하는 구문이다.
그런데 자바의 for문과 코틀린의 for문은 차이점이 있으므로 조심해야 한다. --> 코틀린은 세미콜론으로 구분하지 않는다!!

-JAVA ex-
for (int i=1 ; 1<=5 ; i++){...} --> 자바에서는 세미콜론(;)으로 구분하지만 코틀린에서는 그냥 쉼표(,)로 구분

for문은 내부적으로 반복을 처리하는 인터페이스인 이터레이터(Iterator)에 의해 배열이나 특정 값의 범위, 컬렉션으로 불리는 요소 등에서 사용할 수 있다.
for문은 변수의 값이 범위 내에 있다면 계속해서 본문을 수행할 수 있다. 기본적으로는 변수를 증가시킨다.

---for문의 기본형---
for (요소 변수 in 컬렉션 또는 범위) {반복할 본문}

for문은 (1)변수를 선언한 다음 (2)특정 값의 범위를 반복(루프)하기 위해 (3) in연산자를 통해 특정 값의 범위를 지정해준다.
for문 블록의 내용이 단 한 줄이라면 다음과 같이 중괄호를 생략할 수 있다.
 */
fun main() {
    var sum=0

    for (x in 1..10) sum += x
    println("sum : $sum")
}

/*
<하행, 상행 및 다양한 반복 방법>
위의 예제처럼 1에서 10으로 변수 값이 증가하면서 작업이 반복되는 것을 "상행 반복"이라고 한다.
반대의 경우는 "하행 반복"이라고 부른다.

for (i 5..1) print(i)
--> 위의 구문은 실행되지 않는다. 왜냐하면 하행반복을 할 때는 범위연산자(..)를 사용하는 것이 아니라 downTo 키워드를 사용해야 한다.

for (i 5 downTo 1) print(i)

만약 숫자를 2단계씩 증가하도록 하려면 어떻게 해야할까?

for (i in 1..5 step 2) print(i)
for (i in 5 downTo 1 step 2) print(i)
--> step은 증가폭을 의미한다.
 */
